## Imports
import pandas as pd
from pandas import Series,DataFrame

import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
sns.set_style('whitegrid')
%matplotlib inline


## DataFrame
df = pd.read_csv("C:\\Users\\antonin\\Desktop\\train.csv")

## Basic plots

# Sex
fig, (axis1,axis2,axis3) = plt.subplots(1,3,figsize=(15,5))
sns.countplot(x='Sex', data=df, ax=axis1)
sns.countplot(x='Survived', hue="Sex", data=df, order=[1,0], ax=axis2)
sex_surv = df[["Sex", "Survived"]].groupby(['Sex'],as_index=False).mean()
sns.barplot(x='Sex', y='Survived', data=sex_surv,order=['male','female'],ax=axis3)

# Class
fig, (axis1,axis2,axis3) = plt.subplots(1,3,figsize=(15,5))
sns.countplot(x='Pclass', data=df, ax=axis1)
sns.countplot(x='Survived', hue="Pclass", data=df, order=[1,0], ax=axis2)
sex_surv = df[["Pclass", "Survived"]].groupby(['Pclass'],as_index=False).mean()
sns.barplot(x='Pclass', y='Survived', data=sex_surv,ax=axis3)

# Parch
fig, (axis1,axis2,axis3) = plt.subplots(1,3,figsize=(15,5))
sns.countplot(x='Parch', data=df, ax=axis1)
sns.countplot(x='Survived', hue="Parch", data=df, order=[1,0], ax=axis2)
embark_perc = df[["Parch", "Survived"]].groupby(['Parch'],as_index=False).mean()
sns.barplot(x='Parch', y='Survived', data=embark_perc,ax=axis3)

# Passengers survived by age (average)
fig, axis1 = plt.subplots(1,1,figsize=(24,8))
average_age = df[["Age", "Survived"]].groupby(['Age'],as_index=False).mean()
sns.barplot(x='Age', y='Survived', data=average_age)

facet = sns.FacetGrid(df, hue="Survived",aspect=4)
facet.map(sns.kdeplot,'Fare',shade= True)
facet.set(xlim=(0, 150))
facet.add_legend()

# Fare, Age & Survival Relation
sns.lmplot('Fare', 'Age', data=df,size=4,aspect=3, hue='Survived')
sns.lmplot('Age', 'Fare', data=df,size=4,aspect=3, hue='Survived')

# Fare
facet = sns.FacetGrid(df, hue="Survived",aspect=3)
facet.map(sns.kdeplot,'Fare',shade= True)
facet.set(xlim=(0, 80))
facet.add_legend()


## Advandced Plots

# Sex & Age (adding two more catogeries to Sex)
df.loc[df.Age < 16, ['Sex']] = 'Teen'
df.loc[df.Age < 8, ['Sex']] = 'Child'

fig, (axis1,axis2,axis3) = plt.subplots(1,3,figsize=(15,5))
sns.countplot(x='Sex', data=df, ax=axis1)
sns.countplot(x='Survived', hue="Sex", data=df, order=[1,0], ax=axis2)
sex_surv = df[["Sex", "Survived"]].groupby(['Sex'],as_index=False).mean()
sns.barplot(x='Sex', y='Survived', data=sex_surv,order=['male','female', 'Teen','Child'],ax=axis3)

# Wealth (based on fare)
# Adding new column wealth based on fare
df['wealth'] = np.where(df['Fare']>50, 'Rich', 'Poor')
sns.barplot(x='wealth', y='Survived', data=df,order=['Rich','Poor'])

# Wealth (adding more categories to wealth)
df.loc[df.Fare > 100, ['wealth']] = 'SuperRich'
df.loc[df.Fare < 10, ['wealth']] = 'SuperPoor'
sns.barplot(x='wealth', y='Survived', data=df,order=['SuperRich', 'Rich','Poor', 'SuperPoor'])

### Heat maps based on categories

## Heat map 1 (all)

## Preparation for pivot table
y = df.groupby(["Sex", "wealth"]).size().reset_index(name="Count")
## Pivot table 
fc_pivot = y.pivot("Sex", "wealth", "Count")
## Adding row 'Count_sum' as a sum of all people in 'sex' category (ie sum of rows)
fcr_pivot['Count_sum'] = fc_pivot.sum(axis=1)
## Sorting
#fcr_pivot = fcr_pivot.sort_values(by='Count_sum', ascending=False)
## Show records only with count more than > 
#fcr_pivot = fc_pivot[(fc_pivot.Count_sum > 100)]
## Draw a heatmap with the numeric values in each cell // '[:, 0:8:]' change 8 to 10 that way sum can be shown
fig, ax = plt.subplots(figsize=(7,7))         # Sample figsize in inches
ax.set_title('Tickets Processed')
sns.heatmap(fcr_pivot.iloc[:, 0:4:], annot=True, linewidths=.2, fmt='g', cmap='Blues', ax=ax)

## Heat map 2 (survived)
y = df.loc[df['Survived'] == 1]
y = y.groupby(["Sex", "wealth"]).size().reset_index(name="Count")
fc_pivot = y.pivot("Sex", "wealth", "Count")
fc_pivot['Count_sum'] = fc_pivot.sum(axis=1)
fcr_pivot = fc_pivot[(fc_pivot.Count_sum > 10)]
fcr_pivot = fcr_pivot.sort_values(by='Count_sum', ascending=False)
fig, ax = plt.subplots(figsize=(7,7))         # Sample figsize in inches
ax.set_title('Tickets Processed')
sns.heatmap(fcr_pivot.iloc[:, 0:4:], annot=True, linewidths=.2, fmt='g', cmap='Blues', ax=ax)

## Heat map 3 (died)
y = df.loc[df['Survived'] == 0]
y = y.groupby(["Sex", "wealth"]).size().reset_index(name="Count")
fc_pivot = y.pivot("Sex", "wealth", "Count")
fc_pivot['Count_sum'] = fc_pivot.sum(axis=1)
fcr_pivot = fc_pivot[(fc_pivot.Count_sum > 10)]
fcr_pivot = fcr_pivot.sort_values(by='Count_sum', ascending=False)
fig, ax = plt.subplots(figsize=(7,7))         # Sample figsize in inches
ax.set_title('Tickets Processed')
sns.heatmap(fcr_pivot.iloc[:, 0:4:], annot=True, linewidths=.2, fmt='g', cmap='Blues', ax=ax)
